plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
def oktaProperties = new Properties()
rootProject.file("okta.properties").withInputStream { oktaProperties.load(it) }
android {
    compileSdk 32

    defaultConfig {
        applicationId "eac.qloga.android"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true


        buildConfigField "String", 'DISCOVERY_URL', "\"${oktaProperties.getProperty('discoveryUrl')}\""
        buildConfigField "String", 'CLIENT_ID', "\"${oktaProperties.getProperty('clientId')}\""
        buildConfigField "String", 'SIGN_IN_REDIRECT_URI', "\"${oktaProperties.getProperty('signInRedirectUri')}\""
        buildConfigField "String", 'SIGN_OUT_REDIRECT_URI', "\"${oktaProperties.getProperty('signOutRedirectUri')}\""

        defaultConfig.manifestPlaceholders = [
                "webAuthenticationRedirectScheme": parseScheme(oktaProperties.getProperty('signInRedirectUri'))
        ]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
                    '-opt-in=kotlin.RequiresOptIn',
            ]
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation files('libs/qqq-models.jar')
    implementation files('libs/p4p-models.jar')

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.0'

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha12'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-shared:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def hilt_version = "2.38.1"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
    implementation("androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03")

    def coilComposeVersion = "2.1.0"
    implementation "io.coil-kt:coil-compose:$coilComposeVersion"
    implementation "io.coil-kt:coil-svg:$coilComposeVersion"

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.navigation:navigation-compose:2.5.0"

    //Includes all material design icons from fonts.google.icons
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0"

    def compose_hilt_navigation_version = "1.0.0"
    implementation "androidx.hilt:hilt-navigation-compose:$compose_hilt_navigation_version"

    def room_version = "2.4.1"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    // - Paging 3 Integration
    implementation "androidx.room:room-paging:2.4.2"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    def datastore_pref_version = "1.0.0"
    implementation "androidx.datastore:datastore-preferences:$datastore_pref_version"

    def work_version = "2.7.1"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    // accompanist navigation animation
    implementation "com.google.accompanist:accompanist-navigation-animation:0.24.7-alpha"

    implementation "com.google.accompanist:accompanist-pager:0.24.7-alpha"

    // Insets
    implementation "com.google.accompanist:accompanist-insets:0.17.0"
    // System UI Controller
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.17.0"

    //google map
    implementation "com.google.maps.android:maps-compose:2.1.1"
    implementation "com.google.android.gms:play-services-maps:18.1.0"

    implementation "com.google.accompanist:accompanist-flowlayout:0.24.8-beta"

    //webView Accompanist library for loading web views
    implementation "com.google.accompanist:accompanist-webview:0.24.12-rc"

    // Compose navigation library
    //implementation 'io.github.raamcosta.compose-destinations:shared:1.5.8-beta'
    //ksp 'io.github.raamcosta.compose-destinations:ksp:1.5.8-beta'

    //OKTA authentication
    implementation(platform('com.okta.kotlin:bom:0.6.0-BETA'))
    implementation('com.okta.kotlin:auth-foundation-bootstrap')
    implementation('com.okta.kotlin:web-authentication-ui')

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6'


    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'

    //jackson
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3'

    //MultiDESC
    def multidex_version = "2.0.1"
    implementation("androidx.multidex:multidex:$multidex_version")
}

static def parseScheme(String uri) {
    def index = uri.indexOf(':/')
    if (index == -1) {
        throw new IllegalStateException("Scheme is not in a valid format.")
    }
    return uri.substring(0, index)
}